<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.cloudera.sa</groupId>
    <artifactId>node360</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <parcel.name>fraud_detection_tutorial</parcel.name>
        <jar-with-dependencies.name>Node360</jar-with-dependencies.name>
        <cm.min.version>5.4</cm.min.version>
        <cdh.version>${cm.min.version}.5</cdh.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>0.1.52</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-client</artifactId>
            <version>1.0.0-cdh${cdh.version}</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.java-diff-utils</groupId>
            <artifactId>diffutils</artifactId>
            <version>1.3.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-client</artifactId>
            <version>1.0.0-cdh${cdh.version}</version>
            <type>test-jar</type>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-server</artifactId>
            <version>1.0.0-cdh${cdh.version}</version>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-server</artifactId>
            <version>1.0.0-cdh${cdh.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-protocol</artifactId>
            <version>1.0.0-cdh${cdh.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-hadoop2-compat</artifactId>
            <version>1.0.0-cdh${cdh.version}</version>
            <!-- <scope>runtime</scope> -->
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-hadoop2-compat</artifactId>
            <version>1.0.0-cdh${cdh.version}</version>
            <type>test-jar</type>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-common</artifactId>
            <version>1.0.0-cdh${cdh.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-common</artifactId>
            <version>1.0.0-cdh${cdh.version}</version>
            <type>test-jar</type>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-hadoop-compat</artifactId>
            <version>1.0.0-cdh5.4.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-hadoop-compat</artifactId>
            <version>1.0.0-cdh${cdh.version}</version>
            <type>test-jar</type>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>2.6.0-cdh${cdh.version}</version>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>0.8.1.1-kafka1.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.flume</groupId>
            <artifactId>flume-ng-core</artifactId>
            <version>1.5.0-cdh${cdh.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.flume.flume-ng-sinks</groupId>
            <artifactId>flume-hdfs-sink</artifactId>
            <version>1.5.0-cdh${cdh.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.flume.flume-ng-sources</groupId>
            <artifactId>flume-kafka-source</artifactId>
            <version>1.5.0-cdh${cdh.version}</version>
        </dependency>
        <!-- We need this at compile scope because plugin dependencies don't work with exec:exec -->
        <dependency>
            <groupId>com.cloudera.enterprise</groupId>
            <artifactId>schema-validator</artifactId>
            <version>${cm.min.version}.0</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>maven-hadoop</id>
            <name>Hadoop Releases</name>
            <url>https://repository.cloudera.com/content/repositories/releases/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <id>cloudera-artifacts</id>
          <name>cloudera-repos</name>
          <url>https://repository.cloudera.com/artifactory/cloudera-repos</url>
        </pluginRepository>
    </pluginRepositories>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.4.1</version>
        <executions>
          <execution>
            <id>create-jar-with-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <minimizeJar>true</minimizeJar>
              <outputFile>${project.build.directory}/${jar-with-dependencies.name}.jar</outputFile>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
                    <addHeader>false</addHeader>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>create-parcel</id>
      <dependencies>
        <!-- We need this at compile scope because plugin dependencies don't work with exec:exec -->
        <dependency>
            <groupId>com.cloudera.enterprise</groupId>
            <artifactId>schema-validator</artifactId>
            <version>${cm.min.version}.0</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.7</version>
            <executions>
              <execution>
                <id>filter-parcel-meta</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/parcel-meta</outputDirectory>
                  <resources>
                    <resource>
                      <directory>src/main/parcel-meta</directory>
                      <filtering>true</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>2.2.1</version>
            <executions>
              <execution>
                <id>make-parcel</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <descriptor>src/main/assembly/parcel-el6.xml</descriptor>
                  <finalName>${parcel.name}-${project.version}</finalName>
                  <attach>false</attach>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- This must be before the exec-maven-plugin so that in the package phase
               the 'name-parcel' execution will go before the 'generate-parcel-repo-manifest'
               execution.
            -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>name-parcel</id>
                <phase>package</phase>
                <goals>
                    <goal>run</goal>
                </goals>
                <configuration>
                    <tasks>
                        <move file="${project.build.directory}/${parcel.name}-${project.version}-el6.tar.gz" tofile="${project.build.directory}/${parcel.name}-${project.version}-el6.parcel" />
                    </tasks>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.4.0</version>
            <executions>
              <!-- Verify that our parcel metadata is correct -->
              <execution>
                <id>validate-parcel-meta</id>
                <phase>test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>java</executable>
                  <classpathScope>compile</classpathScope>
                  <arguments>
                    <argument>-classpath</argument>
                    <classpath>
                      <dependency>com.cloudera.enterprise:schema-validator</dependency>
                    </classpath>
                    <argument>com.cloudera.cli.validator.Main</argument>
                    <argument>--parcel-json</argument>
                    <argument>${project.build.directory}/parcel-meta/parcel.json</argument>
                  </arguments>
                </configuration>
              </execution>
              <!-- Scan for parcels and make an appropriate manifest -->
              <execution>
                <id>generate-parcel-repo-manifest</id>
                <phase>package</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>python</executable>
                  <workingDirectory>${project.build.directory}</workingDirectory>
                  <arguments>
                    <argument>${project.build.directory}/make_manifest.py</argument>
                  </arguments>
                </configuration>
              </execution>
              <!-- Verify our final parcel is correct -->
              <execution>
                <id>validate-parcel-file</id>
                <phase>verify</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>java</executable>
                  <classpathScope>compile</classpathScope>
                  <arguments>
                    <argument>-classpath</argument>
                    <classpath>
                      <dependency>com.cloudera.enterprise:schema-validator</dependency>
                    </classpath>
                    <argument>com.cloudera.cli.validator.Main</argument>
                    <argument>-f</argument>
                    <argument>${project.build.directory}/${parcel.name}-${project.version}-el6.parcel</argument>
                  </arguments>
                </configuration>
              </execution>
              <!-- Verify our manifest is correct -->
              <execution>
                <id>validate-parcel-repo-manifest</id>
                <phase>verify</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                  <executable>java</executable>
                  <classpathScope>compile</classpathScope>
                  <arguments>
                    <argument>-classpath</argument>
                    <classpath>
                      <dependency>com.cloudera.enterprise:schema-validator</dependency>
                    </classpath>
                    <argument>com.cloudera.cli.validator.Main</argument>
                    <argument>--manifest-json</argument>
                    <argument>${project.build.directory}/manifest.json</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>1.9.1</version>
            <executions>
              <execution>
                <id>attach-parcel</id>
                <phase>package</phase>
                <goals>
                  <goal>attach-artifact</goal>
                </goals>
                <configuration>
                  <artifacts>
                    <artifact>
                      <file>${parcel.name}-${project.version}-el6.parcel</file>
                      <type>parcel</type>
                    </artifact>
                  </artifacts>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>wagon-maven-plugin</artifactId>
            <version>1.0</version>
            <executions>
              <execution>
                <id>download-parcel-repo-maker</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>download-single</goal>
                </goals>
                <configuration>
                  <url>https://raw.githubusercontent.com</url>
                  <fromFile>cloudera/cm_ext/cm5-${cm.min.version}/make_manifest/make_manifest.py</fromFile>
                  <toDir>${project.build.directory}</toDir>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
